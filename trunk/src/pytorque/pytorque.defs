;; -*- scheme -*-
; object definitions ...
(define-object Manager
  (in-module "Bt")
  (parent "GObject")
  (c-name "BtManager")
  (gtype-id "BT_TYPE_MANAGER")
)

(define-object Peer
  (in-module "Bt")
  (parent "GObject")
  (c-name "BtPeer")
  (gtype-id "BT_TYPE_PEER")
)

(define-object Torrent
  (in-module "Bt")
  (parent "GObject")
  (c-name "BtTorrent")
  (gtype-id "BT_TYPE_TORRENT")
)

;; Enumerations and flags ...


(define-enum PeerStatus
  (in-module "Bt")
  (c-name "BtPeerStatus")
  (gtype-id "BT_TYPE_PEER_STATUS")
  (values
    '("connecting" "BT_PEER_STATUS_CONNECTING")
    '("connected" "BT_PEER_STATUS_CONNECTED")
    '("handshake" "BT_PEER_STATUS_HANDSHAKE")
    '("handshake-peer-id" "BT_PEER_STATUS_HANDSHAKE_PEER_ID")
    '("disconnecting" "BT_PEER_STATUS_DISCONNECTING")
    '("disconnected" "BT_PEER_STATUS_DISCONNECTED")
    '("idle-have" "BT_PEER_STATUS_IDLE_HAVE")
    '("idle" "BT_PEER_STATUS_IDLE")
  )
)

(define-enum PeerSendStatus
  (in-module "Bt")
  (c-name "BtPeerSendStatus")
  (gtype-id "BT_TYPE_PEER_SEND_STATUS")
  (values
    '("handshake" "BT_PEER_SEND_STATUS_HANDSHAKE")
    '("handshaking" "BT_PEER_SEND_STATUS_HANDSHAKING")
    '("disconnected" "BT_PEER_SEND_STATUS_DISCONNECTED")
    '("idle" "BT_PEER_SEND_STATUS_IDLE")
  )
)

(define-enum TorrentTrackerStatus
  (in-module "Bt")
  (c-name "BtTorrentTrackerStatus")
  (gtype-id "BT_TYPE_TORRENT_TRACKER_STATUS")
  (values
    '("idle" "BT_TORRENT_TRACKER_STATUS_IDLE")
    '("resolving" "BT_TORRENT_TRACKER_STATUS_RESOLVING")
    '("connecting" "BT_TORRENT_TRACKER_STATUS_CONNECTING")
    '("announcing" "BT_TORRENT_TRACKER_STATUS_ANNOUNCING")
  )
)


;; From bt-bencode.h

(define-method destroy
  (of-object "BtBencode")
  (c-name "bt_bencode_destroy")
  (return-type "none")
)

(define-function bt_bencode_decode
  (c-name "bt_bencode_decode")
  (return-type "BtBencode*")
  (parameters
    '("const-gchar*" "buf")
    '("GError**" "error")
  )
)

(define-method encode
  (of-object "BtBencode")
  (c-name "bt_bencode_encode")
  (return-type "GString*")
)



;; From bt-manager.h

(define-function bt_manager_get_type
  (c-name "bt_manager_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_manager_new
  (c-name "bt_manager_new")
  (is-constructor-of "BtManager")
  (return-type "BtManager*")
  (parameters
  )
)

(define-function bt_manager_new_with_main
  (c-name "bt_manager_new_with_main")
  (return-type "BtManager*")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-method add_source
  (of-object "BtManager")
  (c-name "bt_manager_add_source")
  (return-type "guint")
  (parameters
    '("GSource*" "source")
  )
)

(define-method accept_start
  (of-object "BtManager")
  (c-name "bt_manager_accept_start")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method accept_stop
  (of-object "BtManager")
  (c-name "bt_manager_accept_stop")
  (return-type "none")
)

(define-method set_port
  (of-object "BtManager")
  (c-name "bt_manager_set_port")
  (return-type "gboolean")
  (parameters
    '("gushort" "port")
    '("GError**" "error")
  )
)

(define-method get_port
  (of-object "BtManager")
  (c-name "bt_manager_get_port")
  (return-type "gushort")
)

(define-method add_torrent
  (of-object "BtManager")
  (c-name "bt_manager_add_torrent")
  (return-type "none")
  (parameters
    '("BtTorrent*" "torrent")
  )
)

(define-method get_torrent
  (of-object "BtManager")
  (c-name "bt_manager_get_torrent")
  (return-type "BtTorrent*")
  (parameters
    '("gchar*" "infohash")
  )
)

(define-method get_torrent_string
  (of-object "BtManager")
  (c-name "bt_manager_get_torrent_string")
  (return-type "BtTorrent*")
  (parameters
    '("gchar*" "infohash")
  )
)



;; From bt-peer.h

(define-function bt_peer_get_type
  (c-name "bt_peer_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_peer_status_get_type
  (c-name "bt_peer_status_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_peer_send_status_get_type
  (c-name "bt_peer_send_status_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-method set_choking
  (of-object "BtPeer")
  (c-name "bt_peer_set_choking")
  (return-type "none")
  (parameters
    '("gboolean" "choked")
  )
)

(define-method set_interesting
  (of-object "BtPeer")
  (c-name "bt_peer_set_interesting")
  (return-type "none")
  (parameters
    '("gboolean" "choked")
  )
)

(define-method get_choking
  (of-object "BtPeer")
  (c-name "bt_peer_get_choking")
  (return-type "gboolean")
)

(define-method get_interesting
  (of-object "BtPeer")
  (c-name "bt_peer_get_interesting")
  (return-type "gboolean")
)

(define-method get_choked
  (of-object "BtPeer")
  (c-name "bt_peer_get_choked")
  (return-type "gboolean")
)

(define-method get_interested
  (of-object "BtPeer")
  (c-name "bt_peer_get_interested")
  (return-type "gboolean")
)

(define-function bt_peer_new
  (c-name "bt_peer_new")
  (is-constructor-of "BtPeer")
  (return-type "BtPeer*")
  (parameters
    '("BtManager*" "manager")
    '("BtTorrent*" "torrent")
    '("GTcpSocket*" "socket")
    '("GInetAddr*" "address")
  )
)



;; From bt-torrent.h

(define-function bt_torrent_get_type
  (c-name "bt_torrent_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_torrent_tracker_status_get_type
  (c-name "bt_torrent_tracker_status_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_torrent_new
  (c-name "bt_torrent_new")
  (is-constructor-of "BtTorrent")
  (return-type "BtTorrent*")
  (parameters
    '("BtManager*" "manager")
    '("gchar*" "filename")
    '("GError**" "error")
  )
)

(define-method start_downloading
  (of-object "BtTorrent")
  (c-name "bt_torrent_start_downloading")
  (return-type "gboolean")
)



;; From bt-tracker.h



;; From bt-utils.h

(define-function bt_error_get_quark
  (c-name "bt_error_get_quark")
  (return-type "GQuark")
  (parameters
  )
)

(define-function bt_infohash
  (c-name "bt_infohash")
  (return-type "gboolean")
  (parameters
    '("BtBencode*" "info")
    '("gchar" "hash[20]")
  )
)

(define-function bt_create_peer_id
  (c-name "bt_create_peer_id")
  (return-type "gboolean")
  (parameters
    '("gchar" "id[21]")
  )
)

(define-function bt_url_encode
  (c-name "bt_url_encode")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "string")
    '("gsize" "size")
  )
)

(define-function bt_hash_to_string
  (c-name "bt_hash_to_string")
  (return-type "gboolean")
  (parameters
    '("gchar" "hash[20]")
    '("gchar" "string[41]")
  )
)

(define-function bt_io_source_create
  (c-name "bt_io_source_create")
  (return-type "GSource*")
  (parameters
    '("BtManager*" "manager")
    '("GIOChannel*" "channel")
    '("GIOCondition" "condition")
    '("GSourceFunc" "callback")
    '("gpointer" "data")
  )
)

(define-function bt_timeout_source_create
  (c-name "bt_timeout_source_create")
  (return-type "GSource*")
  (parameters
    '("BtManager*" "manager")
    '("guint" "timeout")
    '("GSourceFunc" "callback")
    '("gpointer" "data")
  )
)

(define-function bt_idle_source_create
  (c-name "bt_idle_source_create")
  (return-type "GSource*")
  (parameters
    '("BtManager*" "manager")
    '("GSourceFunc" "callback")
    '("gpointer" "data")
  )
)



;; From rc4.h

(define-function rc4_prepare
  (c-name "rc4_prepare")
  (return-type "none")
  (parameters
    '("RC4Context*" "rc4")
    '("const-gchar*" "key")
    '("gsize" "len")
  )
)

(define-function rc4_cipher
  (c-name "rc4_cipher")
  (return-type "none")
  (parameters
    '("RC4Context*" "rc4")
    '("gchar*" "buf")
    '("gsize" "len")
  )
)



;; From sha1.h

(define-function sha1_init
  (c-name "sha1_init")
  (return-type "none")
  (parameters
    '("SHA1Context*" "sha")
  )
)

(define-function sha1_update
  (c-name "sha1_update")
  (return-type "none")
  (parameters
    '("SHA1Context*" "sha")
    '("const-gchar*" "buf")
    '("gsize" "len")
  )
)

(define-function sha1_finish
  (c-name "sha1_finish")
  (return-type "none")
  (parameters
    '("SHA1Context*" "sha")
    '("gchar*" "out")
  )
)


