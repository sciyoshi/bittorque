;; -*- scheme -*-
; object definitions ...
(define-object Manager
  (in-module "Bt")
  (parent "GObject")
  (c-name "BtManager")
  (gtype-id "BT_TYPE_MANAGER")
)

(define-object Peer
  (in-module "Bt")
  (parent "GObject")
  (c-name "BtPeer")
  (gtype-id "BT_TYPE_PEER")
)

(define-object Torrent
  (in-module "Bt")
  (parent "GObject")
  (c-name "BtTorrent")
  (gtype-id "BT_TYPE_TORRENT")
)

;; Enumerations and flags ...

(define-enum PeerStatus
  (in-module "Bt")
  (c-name "BtPeerStatus")
  (gtype-id "BT_TYPE_PEER_STATUS")
  (values
    '("connecting" "BT_PEER_STATUS_CONNECTING")
    '("connected-send" "BT_PEER_STATUS_CONNECTED_SEND")
    '("connected-wait" "BT_PEER_STATUS_CONNECTED_WAIT")
    '("send-handshake" "BT_PEER_STATUS_SEND_HANDSHAKE")
    '("wait-handshake" "BT_PEER_STATUS_WAIT_HANDSHAKE")
    '("disconnecting" "BT_PEER_STATUS_DISCONNECTING")
    '("disconnected" "BT_PEER_STATUS_DISCONNECTED")
    '("idle-have" "BT_PEER_STATUS_IDLE_HAVE")
    '("idle" "BT_PEER_STATUS_IDLE")
  )
)

(define-enum TorrentPriority
  (in-module "Bt")
  (c-name "BtTorrentPriority")
  (gtype-id "BT_TYPE_TORRENT_PRIORITY")
  (values
    '("low" "BT_TORRENT_PRIORITY_LOW")
    '("normal" "BT_TORRENT_PRIORITY_NORMAL")
    '("high" "BT_TORRENT_PRIORITY_HIGH")
  )
)

(define-enum Error
  (in-module "Bt")
  (c-name "BtError")
  (gtype-id "BT_TYPE_ERROR")
  (values
    '("network" "BT_ERROR_NETWORK")
    '("resolving" "BT_ERROR_RESOLVING")
    '("invalid-bencoded-data" "BT_ERROR_INVALID_BENCODED_DATA")
    '("invalid-torrent" "BT_ERROR_INVALID_TORRENT")
    '("peer-handshake" "BT_ERROR_PEER_HANDSHAKE")
    '("tracker" "BT_ERROR_TRACKER")
    '("invalid" "BT_ERROR_INVALID")
  )
)


;; From bt-peer.h

(define-function bt_peer_get_type
  (c-name "bt_peer_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_peer_status_get_type
  (c-name "bt_peer_status_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-method set_choking
  (of-object "BtPeer")
  (c-name "bt_peer_set_choking")
  (return-type "none")
  (parameters
    '("gboolean" "choked")
  )
)

(define-method set_interesting
  (of-object "BtPeer")
  (c-name "bt_peer_set_interesting")
  (return-type "none")
  (parameters
    '("gboolean" "choked")
  )
)

(define-function bt_peer_new
  (c-name "bt_peer_new")
  (is-constructor-of "BtPeer")
  (return-type "BtPeer*")
  (properties
    '("manager" (argname "BtManager*"))
    '("torrent" (argname "BtTorrent*") (optional))
    '("socket" (argname "GTcpSocket*") (optional))
    '("address" (argname "GInetAddr*") (optional))
  )
)

(define-method connect
  (of-object "BtPeer")
  (c-name "bt_peer_connect")
  (return-type "none")
)

(define-method disconnect
  (of-object "BtPeer")
  (c-name "bt_peer_disconnect")
  (return-type "gboolean")
)

(define-method send_keepalive
  (of-object "BtPeer")
  (c-name "bt_peer_send_keepalive")
  (return-type "none")
)

(define-method send_choke
  (of-object "BtPeer")
  (c-name "bt_peer_send_choke")
  (return-type "none")
)

(define-method send_unchoke
  (of-object "BtPeer")
  (c-name "bt_peer_send_unchoke")
  (return-type "none")
)

(define-method send_interested
  (of-object "BtPeer")
  (c-name "bt_peer_send_interested")
  (return-type "none")
)

(define-method send_uninterested
  (of-object "BtPeer")
  (c-name "bt_peer_send_uninterested")
  (return-type "none")
)

(define-method receive
  (of-object "BtPeer")
  (c-name "bt_peer_receive")
  (return-type "none")
  (parameters
    '("gchar*" "buffer")
    '("gsize" "length")
    '("gpointer" "data")
  )
)

(define-method send_handshake
  (of-object "BtPeer")
  (c-name "bt_peer_send_handshake")
  (return-type "none")
)



;; From bt-torrent.h

(define-function bt_torrent_priority_get_type
  (c-name "bt_torrent_priority_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_torrent_file_get_type
  (c-name "bt_torrent_file_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_torrent_get_type
  (c-name "bt_torrent_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_torrent_new
  (c-name "bt_torrent_new")
  (is-constructor-of "BtTorrent")
  (return-type "BtTorrent*")
  (properties
    '("manager" (argname "BtManager"))
    '("filename" (argname "const-gchar*"))
  )
)

(define-method set_location
  (of-object "BtTorrent")
  (c-name "bt_torrent_set_location")
  (return-type "none")
  (parameters
    '("const-gchar*" "location")
  )
)

(define-method start_downloading
  (of-object "BtTorrent")
  (c-name "bt_torrent_start_downloading")
  (return-type "gboolean")
)

(define-method announce
  (of-object "BtTorrent")
  (c-name "bt_torrent_announce")
  (return-type "gboolean")
)

(define-method announce_stop
  (of-object "BtTorrent")
  (c-name "bt_torrent_announce_stop")
  (return-type "gboolean")
)

(define-method add_peer
  (of-object "BtTorrent")
  (c-name "bt_torrent_add_peer")
  (return-type "gboolean")
  (parameters
    '("BtPeer*" "peer")
  )
)



;; From bt-utils.h

(define-function bt_error_get_type
  (c-name "bt_error_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_error_get_quark
  (c-name "bt_error_get_quark")
  (return-type "GQuark")
  (parameters
  )
)

(define-function bt_tcp_socket_get_type
  (c-name "bt_tcp_socket_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_inet_addr_get_type
  (c-name "bt_inet_addr_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_get_info_hash
  (c-name "bt_get_info_hash")
  (return-type "gchar*")
  (parameters
    '("BtBencode*" "info")
  )
)

(define-function bt_create_peer_id
  (c-name "bt_create_peer_id")
  (return-type "gchar*")
  (parameters
  )
)

(define-function bt_url_encode
  (c-name "bt_url_encode")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "string")
    '("gsize" "size")
  )
)

(define-function bt_hash_to_string
  (c-name "bt_hash_to_string")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "hash")
  )
)

(define-function bt_client_name_from_id
  (c-name "bt_client_name_from_id")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "id")
  )
)

(define-function bt_io_source_create
  (c-name "bt_io_source_create")
  (return-type "GSource*")
  (parameters
    '("BtManager*" "manager")
    '("GIOChannel*" "channel")
    '("GIOCondition" "condition")
    '("GSourceFunc" "callback")
    '("gpointer" "data")
  )
)

(define-function bt_timeout_source_create
  (c-name "bt_timeout_source_create")
  (return-type "GSource*")
  (parameters
    '("BtManager*" "manager")
    '("guint" "timeout")
    '("GSourceFunc" "callback")
    '("gpointer" "data")
  )
)

(define-function bt_idle_source_create
  (c-name "bt_idle_source_create")
  (return-type "GSource*")
  (parameters
    '("BtManager*" "manager")
    '("GSourceFunc" "callback")
    '("gpointer" "data")
  )
)



;; From bt-manager.h

(define-function bt_manager_get_type
  (c-name "bt_manager_get_type")
  (return-type "GType")
  (parameters
  )
)

(define-function bt_manager_new
  (c-name "bt_manager_new")
  (is-constructor-of "BtManager")
  (return-type "BtManager*")
  (properties
   '("context" (argname "GMainContext*") (optional))
  )
)

(define-function bt_manager_new_with_main
  (c-name "bt_manager_new_with_main")
  (return-type "BtManager*")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-method add_source
  (of-object "BtManager")
  (c-name "bt_manager_add_source")
  (return-type "guint")
  (parameters
    '("GSource*" "source")
  )
)

(define-method accept_start
  (of-object "BtManager")
  (c-name "bt_manager_accept_start")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method accept_stop
  (of-object "BtManager")
  (c-name "bt_manager_accept_stop")
  (return-type "none")
)

(define-method set_port
  (of-object "BtManager")
  (c-name "bt_manager_set_port")
  (return-type "gboolean")
  (parameters
    '("gushort" "port")
    '("GError**" "error")
  )
)

(define-method get_port
  (of-object "BtManager")
  (c-name "bt_manager_get_port")
  (return-type "gushort")
)

(define-method add_torrent
  (of-object "BtManager")
  (c-name "bt_manager_add_torrent")
  (return-type "none")
  (parameters
    '("BtTorrent*" "torrent")
  )
)

(define-method get_torrent
  (of-object "BtManager")
  (c-name "bt_manager_get_torrent")
  (return-type "BtTorrent*")
  (parameters
    '("const-gchar*" "infohash")
  )
)

(define-method get_torrent_string
  (of-object "BtManager")
  (c-name "bt_manager_get_torrent_string")
  (return-type "BtTorrent*")
  (parameters
    '("const-gchar*" "infohash")
  )
)


